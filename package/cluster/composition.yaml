
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster.gcp.cross-cluster.crossplane.io
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: cross-cluster.crossplane.io/v1alpha1
    kind: Cluster
  resources:
    - base:
        apiVersion: container.gcp.crossplane.io/v1beta1
        kind: GKECluster
        spec:
          forProvider:
            initialClusterVersion: "1.16"
            location: us-west2
            masterAuth:
              username: admin
            masterAuthorizedNetworksConfig:
              enabled: false
            networkConfig:
              enableIntraNodeVisibility: true
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            addonsConfig:
              gcePersistentDiskCsiDriverConfig:
                enabled: true
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.location
          transforms:
            - type: map
              map:
                east: us-east1
                west: us-west2
        - fromFieldPath: spec.region
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "kubeconfig-%s"
    # Each cluster has one node pool. Its nodes are spread evenly across the zones
    # in which the cluster exists.
    - base:
        apiVersion: container.gcp.crossplane.io/v1alpha1
        kind: NodePool
        spec:
          forProvider:
            location: us-west2
            initialNodeCount: 1
            clusterSelector:
              matchControllerRef: true
            autoscaling:
              enabled: true
              maxNodeCount: 2
            config:
              diskType: pd-standard
              diskSizeGb: 100
              imageType: COS
            management:
              autoRepair: true
              autoUpgrade: false
      patches:
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.location
          transforms:
            - type: map
              map:
                east: us-east1
                west: us-west2
    - base:
        apiVersion: database.gcp.crossplane.io/v1beta1
        kind: CloudSQLInstance
        spec:
          forProvider:
            databaseVersion: POSTGRES_9_6
            region: us-east1
            settings:
              tier: db-custom-1-3840
              dataDiskType: PD_SSD
              ipConfiguration:
                ipv4Enabled: true
                authorizedNetworks:
                  - value: "0.0.0.0/0"
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - fromFieldPath: spec.region
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "db-%s"
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
      patches:
        - fromFieldPath: spec.region
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "helm-%s"
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        # This ProviderConfig uses the above GKE cluster's connection secret as
        # its credentials secret.
        - fromFieldPath: spec.region
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "kubeconfig-%s"
      readinessChecks:
        - type: None
